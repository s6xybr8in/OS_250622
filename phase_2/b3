BITS 16
ORG 0x7c00

cli ; deactivate interupt

mov ah, 0x02 ; read sector
mov al, 1 ; sector count
mov ch, 0 ; cylinder
mov cl, 2 ; sector
mov dh, 0 ; head
mov dl, 0x80 ; drive
mov bx, 0x10000 ; buffer
int 0x13
jc disk_error


lgdt gdt_descriptor

mov eax, cr0
or eax, 1
mov cr0, eax
; cr0 on

jmp CODE_SEG:0x10000

gdt_start:
	gdt_null: dq 0x0000000000000000
	gdt_code: dq 0x00CF9A000000FFFF
	gdt_data: dq 0x00CF92000000FFFF
gdt_end: 

gdt_descriptor:
	dw gdt_end - gdt_start - 1
	dd gdt_start
CODE_SEG equ gdt_code - gdt_start
DATA_SEG equ gdt_data - gdt_start

disk_error:
    mov si, disk_error_msg
    call print_string
    jmp $

disk_error_msg:
    db 'Disk read error!', 0

print_string:
    mov ah, 0x0e
.loop:
    lodsb
    cmp al, 0
    je .done
    int 0x10
    jmp .loop
.done:
    ret
times 510-($-$$) db 0
dw 0xAA55
